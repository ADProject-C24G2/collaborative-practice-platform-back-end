<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team8.ad.project.mapper.teacher.ClassMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO `class` (
            `name`,
            `description`,
            `access_type`,
            `token`,
            `access_available`,
            `access_expiration`,
            `max_members`,
            `create_time`,
            `update_time`,
            `create_user`,
            `update_user`,
            `teacher_id`
        ) VALUES (
                     #{name},
                     #{description},
                     #{accessType},
                     #{token},
                     #{accessAvailable},
                     #{accessExpiration},
                     #{maxMembers},
                     #{createTime},
                     #{updateTime},
                     #{createUser},
                     #{updateUser},
                    #{teacherId}
                 )
    </insert>

    <insert id="insertAnnouncement" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO announcement
            (classId, studentId, teacherId, title, content, createTime, status, recipientType)
        VALUES
            (#{classId}, #{studentId}, #{teacherId}, #{title}, #{content}, #{createTime}, #{status}, #{recipientType})
    </insert>



    <select id="selectQuestions" resultType="team8.ad.project.entity.entity.Question">
        SELECT id, image, question, choices, answer
        FROM qa
        WHERE 1=1

        <if test="viewQuestionDTO.keyword != null and viewQuestionDTO.keyword != ''">
            AND (question LIKE CONCAT('%', #{viewQuestionDTO.keyword}, '%')
            OR hint LIKE CONCAT('%', #{viewQuestionDTO.keyword}, '%')
            OR grade LIKE CONCAT('%', #{viewQuestionDTO.keyword}, '%')
            OR subject LIKE CONCAT('%', #{viewQuestionDTO.keyword}, '%')
            OR topic LIKE CONCAT('%', #{viewQuestionDTO.keyword}, '%')
            OR category LIKE CONCAT('%', #{viewQuestionDTO.keyword}, '%'))
        </if>

        <if test="viewQuestionDTO.questionName != null and viewQuestionDTO.questionName != ''">
            AND question LIKE CONCAT('%', #{viewQuestionDTO.questionName}, '%')
        </if>

        <if test="viewQuestionDTO.grade != null and !viewQuestionDTO.grade.isEmpty()">
            AND grade IN
            <foreach item="gradeItem" collection="viewQuestionDTO.grade" open="(" separator="," close=")">
                #{gradeItem}
            </foreach>
        </if>

        <if test="viewQuestionDTO.subject != null and !viewQuestionDTO.subject.isEmpty()">
            AND subject IN
            <foreach item="subjectItem" collection="viewQuestionDTO.subject" open="(" separator="," close=")">
                #{subjectItem}
            </foreach>
        </if>

        <if test="viewQuestionDTO.topic != null and !viewQuestionDTO.topic.isEmpty()">
            AND topic IN
            <foreach item="topicItem" collection="viewQuestionDTO.topic" open="(" separator="," close=")">
                #{topicItem}
            </foreach>
        </if>

        <if test="viewQuestionDTO.category != null and !viewQuestionDTO.category.isEmpty()">
            AND category IN
            <foreach item="categoryItem" collection="viewQuestionDTO.category" open="(" separator="," close=")">
                #{categoryItem}
            </foreach>
        </if>

        LIMIT #{count} OFFSET #{offset}
    </select>



    <insert id="insertQuestion" parameterType="team8.ad.project.entity.entity.Question"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO qa
        (image, question, choices, answer, grade, subject, topic, category,
         hint, task, skill, lecture, solution)
        VALUES
            (#{image}, #{question}, #{choices}, #{answer}, #{grade}, #{subject}, #{topic}, #{category},
             #{hint}, #{task}, #{skill}, #{lecture}, #{solution})
    </insert>



    <select id="findAssignmentsByClassId" resultType="team8.ad.project.entity.entity.Assignment">
        SELECT
            id, class_id, assignment_name
        FROM
            assignment
        WHERE
            class_id = #{classId}
    </select>

    <select id="findSubmissionDetailsByAssignmentId" resultType="team8.ad.project.entity.dto.SubmissionDetailDTO">
        SELECT
            asd.studentId AS studentId,
            s.name AS studentName,
            asd.whetherFinish,
            asd.finishTime,
            asd.Accurancy AS accuracy  -- Mapping the typo 'Accurancy' to 'accuracy'
        FROM
            assignment_students_details asd
                LEFT JOIN
            user s ON asd.studentId = s.id -- Assuming a 'students' table with 'id' and 'name'
        WHERE
            asd.assignmentId = #{assignmentId}
    </select>




    <insert id="insertUser" parameterType="team8.ad.project.entity.entity.User"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user
        (name, password, email, phone, address, signature, gender, avatar, title, `group`,
         user_type, create_time, update_time, status)
        VALUES
            (#{name}, #{password}, #{email}, #{phone}, #{address}, #{signature}, #{gender}, #{avatar}, #{title}, #{group},
             #{userType}, #{createTime}, #{updateTime}, #{status})
    </insert>

    <insert id="insertTags">
        INSERT INTO tag
        (teacher_id, `key`, label)
        VALUES
        <foreach collection="tags" item="tag" separator=",">
            (#{tag.teacherId}, #{tag.key}, #{tag.label})
        </foreach>
    </insert>


    <select id="findByEmail" resultType="team8.ad.project.entity.entity.User">
        SELECT id, email FROM user WHERE email = #{email} LIMIT 1
    </select>


    <delete id="deleteAssignmentById">
        DELETE FROM assignment WHERE id = #{assignmentId}
    </delete>

    <delete id="deleteAssignmentDetailsByAssignmentId">
        DELETE FROM assignment_details WHERE assignment_id = #{assignmentId}
    </delete>

    <delete id="deleteStudentDetailsByAssignmentId">
        DELETE FROM assignment_students_details WHERE assignmentId = #{assignmentId}
    </delete>

</mapper>