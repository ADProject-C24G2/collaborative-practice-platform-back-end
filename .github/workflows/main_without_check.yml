name: Build, Deploy to ACR

on:
  workflow_dispatch:
    branches:
      - master

env:
  JAVA_VERSION: '11'
  JAVA_DISTRIBUTION: 'microsoft'
  ARTIFACT_PATH: 'platform-server/target/*.jar'
  IMAGE_NAME: 'java-service'

jobs:
  build-and-sca-scan:
    name: Build
    runs-on: ubuntu-latest
    if: github.repository == 'ADProject-C24G2/collaborative-practice-platform-back-end'
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B clean install

      - name: Upload JAR artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app-jar
          path: ${{ env.ARTIFACT_PATH }}

  push:
    name: Push to ACR
    runs-on: ubuntu-latest
    needs: build-and-sca-scan
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create workspace directory for artifact
        run: mkdir -p ${{ github.workspace }}/platform-server/target

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: java-app-jar
          path: ${{ github.workspace }}/platform-server/target

      - name: Get commit hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build local Docker image for scanning
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }} .

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Tag and Push image to ACR
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }} ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPOSITORY }}:${{ steps.vars.outputs.sha_short }}
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }} ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPOSITORY }}:latest
          docker push ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPOSITORY }}:${{ steps.vars.outputs.sha_short }}
          docker push ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPOSITORY }}:latest
