name: Build, Scan, and Deploy to ACR

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  JAVA_VERSION: '11'
  JAVA_DISTRIBUTION: 'microsoft'
  ARTIFACT_PATH: 'platform-server/target/*.jar'
  IMAGE_NAME: 'java-service'

jobs:
  build-and-sca-scan:
    name: Build & SCA Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B clean install

      - name: Set Cache Week
        id: date
        run: echo "week=$(date +%Y-%U)" >> $GITHUB_OUTPUT

      - name: Cache NVD data
        uses: actions/cache@v4
        with:
          path: ~/.dependency-check/data
          key: ${{ runner.os }}-nvd-data-${{ steps.date.outputs.week }}
          restore-keys: |
            ${{ runner.os }}-nvd-data-

      - name: Run OWASP Dependency Check for SCA
        run: mvn org.owasp:dependency-check-maven:check -DnvdApiKey=${{ secrets.NVD_API_KEY }}

      - name: Upload JAR artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app-jar
          path: ${{ env.ARTIFACT_PATH }}

  dast-scan-and-push:
    name: DAST Scan & Push to ACR
    runs-on: ubuntu-latest
    needs: build-and-sca-scan
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create workspace directory for artifact
        run: mkdir -p ${{ github.workspace }}/platform-server/target

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: java-app-jar
          path: ${{ github.workspace }}/platform-server/target

      - name: Get commit hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build local Docker image for scanning
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }} .

      - name: Run container in background for DAST scan
        run: docker run -d --name app-for-scan -p 8080:8080 ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}

      - name: Run OWASP ZAP Full Scan (DAST)
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: 'http://localhost:8080'

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Tag and Push image to ACR
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }} ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPOSITORY }}:${{ steps.vars.outputs.sha_short }}
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }} ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPOSITORY }}:latest
          docker push ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPOSITORY }}:${{ steps.vars.outputs.sha_short }}
          docker push ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPOSITORY }}:latest
